<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on Jeff Quast </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 01 Jan 2008 00:00:00 UTC</updated>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/hover-api/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/hover-api/</guid>
      <description>&lt;div class=&#34;document&#34; id=&#34;ab-using-the-hover-api&#34;&gt;
&lt;h1 class=&#34;title&#34;&gt;(Ab)using the Hover API&lt;/h1&gt;

&lt;p&gt;I recently switched from &lt;a class=&#34;reference external&#34; href=&#34;https://directnic.com/&#34;&gt;DirecNIC&lt;/a&gt; to
&lt;cite&gt;Hover &amp;lt;https://www.hover.com/&amp;gt;&lt;/cite&gt; as my DNS provider for two reasons.
(1) DirectNIC was once a mom-and-pop shop in the late 90&#39;s from
New Orleans when I first signed up, which astonishingly
&lt;a class=&#34;reference external&#34; href=&#34;http://news.netcraft.com/archives/2005/08/31/directnic_stays_online_in_new_orleans_facility.html&#34;&gt;survived Hurricane Katrina&lt;/a&gt;
. However, it appears they have sold out to some international
conglomerate, moved their support staff overseas, and the same
problems that plagued their control panel in 1997 continue to this
day. (2) Hover is a subsidiary of &lt;cite&gt;Tucows, Inc. &amp;lt;http://en.wikipedia.org/wiki/Tucows&amp;gt;&lt;/cite&gt;
which was originally founded in Flint, MI by Scott Swedorski --
where I also resided for eight years.  Hover&#39;s technical and support
staff continue to reside in Toronto, ON.&lt;/p&gt;
&lt;p&gt;Recently, I set up a new build service for the
&lt;a class=&#34;reference external&#34; href=&#34;http://pexpect.readthedocs.org/en/latest/&#34;&gt;pexpect&lt;/a&gt; project, which according
to &lt;a class=&#34;reference external&#34; href=&#34;https://pypi.python.org/pypi/pexpect/&#34;&gt;pypi&lt;/a&gt; receives nearly 50,000
downloads each month.  It is imperative to use continuous integration to run a
full suite of tests across as many Operating Systems as possible.  I use
&lt;cite&gt;joyent &amp;lt;http://joyent.com/&amp;gt;&lt;/cite&gt; as a Sun Solaris hosting provider, but their costs
run a quite a bit higher than services like
&lt;cite&gt;DigitalOcean &amp;lt;https://www.digitalocean.com/&amp;gt;&lt;/cite&gt;.  To save several hundred dollars
a year, I dynamically provision a Solaris host on-demand, triggered by the build
system.&lt;/p&gt;
&lt;div class=&#34;section&#34; id=&#34;dynamic-dns&#34;&gt;
&lt;h1&gt;Dynamic DNS&lt;/h1&gt;
&lt;p&gt;I decided to have something of a dynamic DNS, so that &lt;tt class=&#34;docutils literal&#34;&gt;sunos.pexpect.org&lt;/tt&gt; would
always resolve to the latest provisioned host.  I was disappointed to find that
Hover &lt;cite&gt;does not provide a documented API &amp;lt;https://help.hover.com/entries/20860046-Hover-needs-an-API&amp;gt;&lt;/cite&gt;.  I did, however, find that they have one, thanks to
&lt;cite&gt;&amp;#64;dankrause &amp;lt;https://github.com/dankrause&amp;gt;&lt;/cite&gt;&#39;s
&lt;cite&gt;gist &amp;lt;https://gist.github.com/dankrause/5585907&amp;gt;&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;So I used this to create a simple dynamic dns update script, given the variables:&lt;/p&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;tt class=&#34;docutils literal&#34;&gt;HOVER_USERNAME&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&#34;docutils literal&#34;&gt;HOVER_PASSWORD&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And TeamCity variables:&lt;/p&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;tt class=&#34;docutils literal&#34;&gt;%primaryIp%&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class=&#34;docutils literal&#34;&gt;%name%&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could build the following in-line TeamCity script to update sunos.pexpect.org:&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
#!/usr/bin/env python2.7
from __future__ import print_function
import requests
import sys
import os

class HoverException(Exception):
    pass

class HoverAPI(object):
    def __init__(self, username, password):
        params = {&amp;quot;username&amp;quot;: username, &amp;quot;password&amp;quot;: password}
        r = requests.post(&amp;quot;https://www.hover.com/api/login&amp;quot;, params=params)
        if not r.ok or &amp;quot;hoverauth&amp;quot; not in r.cookies:
            raise HoverException(r)
        self.cookies = {&amp;quot;hoverauth&amp;quot;: r.cookies[&amp;quot;hoverauth&amp;quot;]}
    def call(self, method, resource, data=None):
        url = &amp;quot;https://www.hover.com/api/{0}&amp;quot;.format(resource)
        r = requests.request(method, url, data=data, cookies=self.cookies)
        if not r.ok:
            raise HoverException(r)
        if r.content:
            body = r.json()
            if &amp;quot;succeeded&amp;quot; not in body or body[&amp;quot;succeeded&amp;quot;] is not True:
                raise HoverException(body)
            return body

# connect to API
client = HoverAPI(os.environ.get(&#39;HOVER_USERNAME&#39;),
                  os.environ.get(&#39;HOVER_PASSWORD&#39;))
primaryIp = &amp;quot;%primaryIp%&amp;quot;
dnsname = &amp;quot;%name%&amp;quot;

dns_name, domain_name = dnsname.split(&#39;.&#39;, 1)

# get all DNS records
result = client.call(&amp;quot;get&amp;quot;, &amp;quot;dns&amp;quot;)
assert result[&#39;succeeded&#39;], result

# discover existing dns record, if any
dns_record = None
domain_record = None
for dns_domain in result[&#39;domains&#39;]:
    if dns_domain[&#39;domain_name&#39;] == domain_name:
        domain_record = dns_domain
        for dns_entry in dns_domain[&#39;entries&#39;]:
            if dns_entry[&#39;name&#39;] == dns_name:
                dns_record = dns_entry
                break
    if dns_record is not None and domain_record is not None:
        break

if dns_record is not None and domain_record is not None:
    print(&amp;quot;Deleting entry for {0}.{1} ... &amp;quot;
          .format(dns_name, domain_name), end=&amp;quot;&amp;quot;)
    result = client.call(&amp;quot;delete&amp;quot;, &amp;quot;dns/{0}&amp;quot;.format(dns_record[&#39;id&#39;]))
    assert result[&#39;succeeded&#39;], result
    print(&amp;quot;OK&amp;quot;)
else:
    print(&amp;quot;No record exists for {0}&amp;quot;.format(dnsname))

print(&amp;quot;Creating A record {0}.{1} =&amp;gt; {2} ... &amp;quot;
      .format(dns_name, domain_name, primaryIp), end=&amp;quot;&amp;quot;)

## create a new A record:
record = {&amp;quot;name&amp;quot;: dns_name, &amp;quot;type&amp;quot;: &amp;quot;A&amp;quot;, &amp;quot;content&amp;quot;: primaryIp}
post_id = &amp;quot;domains/{0}/dns&amp;quot;.format(domain_record[&#39;id&#39;])
result = client.call(&amp;quot;post&amp;quot;, post_id, record)
assert result[&#39;succeeded&#39;], result
print(&amp;quot;OK&amp;quot;)
&lt;/pre&gt;
&lt;p&gt;It works like a charm!&lt;/p&gt;
&lt;dl class=&#34;docutils&#34;&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;[03:59:05] Deleting entry for sunos.pexpect.org ... OK
[03:59:05] Creating A record sunos.pexpect.org =&amp;gt; 165.225.151.208 ... OK&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/weekof_2014_dec_01/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/weekof_2014_dec_01/</guid>
      <description>&lt;div class=&#34;document&#34; id=&#34;week-of-dec-01-2014&#34;&gt;
&lt;h1 class=&#34;title&#34;&gt;Week of Dec 01, 2014&lt;/h1&gt;

&lt;p&gt;Quite a lot of activity lately.  This is also my first blog post, so I&#39;m trying to catch up for more than one weeks&#39; activity.&lt;/p&gt;
&lt;p&gt;Published a new package:&lt;/p&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;https://github.com/jquast/ghstat&#34;&gt;ghstat&lt;/a&gt;:  Command-line application to set or get github commit status.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Released new versions:&lt;/p&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;https://pypi.python.org/pypi/wcwidth&#34;&gt;wcwidth&lt;/a&gt;: version 0.1.4 released.
Contributions by &lt;a class=&#34;reference external&#34; href=&#34;http://ballingt.com&#34;&gt;&amp;#64;thomasballinger&lt;/a&gt;
and &lt;a class=&#34;reference external&#34; href=&#34;http://lmontopo.github.io/&#34;&gt;Leta Montopoli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pull requests:&lt;/p&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;http://vagrantup.com&#34;&gt;Vagrant&lt;/a&gt;: Avoid double-newlines in salt-call output &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/mitchellh/vagrant/pull/4900&#34;&gt;#4900&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;https://github.com/landscapeio/prospector&#34;&gt;Prospector&lt;/a&gt;:  Detect target file encoding in autodetect.py &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/landscapeio/prospector/pull/71&#34;&gt;#71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;https://github.com/tehmaze/xmodem&#34;&gt;Xmodem&lt;/a&gt;: Make logger bound to class instance, fix getc(1) &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/tehmaze/xmodem/pull/5&#34;&gt;#5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;https://bitbucket.org/regebro/pyroma&#34;&gt;Pyroma&lt;/a&gt;: Use data.get() rather than data[&#39;key&#39;] in ratings.py &lt;a class=&#34;reference external&#34; href=&#34;https://bitbucket.org/regebro/pyroma/pull-request/6/use-dataget-rather-than-data-key-in/diff&#34;&gt;#6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;reference external&#34; href=&#34;http://www.astroid.org/&#34;&gt;astroid&lt;/a&gt;: return AstroidBuilder() value in py2pytest.py &lt;a class=&#34;reference external&#34; href=&#34;https://bitbucket.org/logilab/astroid/pull-request/63/return-astroidbuilder-value-in-py2pytestpy/diff&#34;&gt;#63&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Honorable mentions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&#34;first&#34;&gt;&lt;a class=&#34;reference external&#34; href=&#34;http://ballingt.com/2014/11/29/key-detection-code.html&#34;&gt;Comparing key detection code in Blessed and Curtsies&lt;/a&gt; had many kind words to say about my work with the &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/jquast/blessed/&#34;&gt;blessed&lt;/a&gt; project:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;The Blessed code is just better.&lt;/p&gt;
&lt;p&gt;jquast’s comments assume the reader knows Python, and that they don’t
know the ins and outs of terminals. They’re great comments!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/pages/resume/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/pages/resume/</guid>
      <description>&lt;div class=&#34;document&#34;&gt;


&lt;div class=&#34;section&#34; id=&#34;employment-history&#34;&gt;
&lt;h1&gt;Employment History&lt;/h1&gt;
&lt;div class=&#34;section&#34; id=&#34;current&#34;&gt;
&lt;h2&gt;Current&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Oct. 2014 - current&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Undisclosed&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title&lt;/em&gt;: Senior Cloud Engineer&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;rivermeadow&#34;&gt;
&lt;h2&gt;RiverMeadow&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Oct. 2013 - Oct. 2014&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: San Jose, CA&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title&lt;/em&gt;: Senior Software Engineer&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Group&lt;/em&gt;: Software Engineering&lt;/li&gt;
&lt;li&gt;Job Responsibilities:&lt;ul&gt;
&lt;li&gt;Developed all major components of the Rivermeadow backend: a large Python code base that performs Linux and Windows Cloud migrations to and from various providers (AWS, Openstack, Terremark, vCloud, vSphere).&lt;/li&gt;
&lt;li&gt;Lead of code repository and packaging, release and branching strategies and testing infrastructure. Most senior expert of team at time of departure.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;jackson-national-life-insurance&#34;&gt;
&lt;h2&gt;Jackson National Life Insurance&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Under contract by&lt;/em&gt;: iVantage&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Apr. 2012 - Jan 2013&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Lansing, MI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title&lt;/em&gt;: Web Developer&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Group&lt;/em&gt;: IT Technology&lt;/li&gt;
&lt;li&gt;Job Responsibilities:&lt;ul&gt;
&lt;li&gt;Support, engineer, deploy BEA WebLogic, jBoss, and Apache HA systems.&lt;/li&gt;
&lt;li&gt;Developed record keeping &amp;amp; reporting software for web server farms (Python).&lt;/li&gt;
&lt;li&gt;Developed extensions to Interwoven Teamsite (Perl).&lt;/li&gt;
&lt;li&gt;Support Java developers for code migration of WebSphere/5.1jdk to jBoss/1.7.&lt;/li&gt;
&lt;li&gt;24/7 On-call support and first contact for web issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;jstor-ithaka&#34;&gt;
&lt;h2&gt;Jstor (Ithaka)&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Sep. 2008 - Dec 2011&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Ann Arbor, MI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title(s)&lt;/em&gt;: Applications Support Specialist, Software Developer, Production Operations Support &amp;amp; Data Specialist&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Group(s)&lt;/em&gt;: Content Management Sys. Unit, Ithaka Delivery Operations, Technology Services Unit&lt;/li&gt;
&lt;li&gt;Job Responsibilities:&lt;ul&gt;
&lt;li&gt;Developed Solaris Zone management software: migrate, clone, copy, etc. (Shell).&lt;/li&gt;
&lt;li&gt;Developed hardware allocation and accounting software (Jython, Shell).&lt;/li&gt;
&lt;li&gt;Developed Journal archive metrics and information extraction API (Python).&lt;/li&gt;
&lt;li&gt;Developed Identity integration software for Atlassian Jira/LDAP (Jython/Java).&lt;/li&gt;
&lt;li&gt;Developed Pure-FTPd patch for SHA-256 password auth via MySQL store (C).&lt;/li&gt;
&lt;li&gt;Deploy, Administrate, and support MySQL, Pure-FTPd, Atlassian Confluence, Jira, and Solaris systems. Integrated unix systems with Microsoft domain controllers.&lt;/li&gt;
&lt;li&gt;Systems and software monitoring with Zabbix and Nagios&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;general-motors&#34;&gt;
&lt;h2&gt;General Motors&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Under contract by&lt;/em&gt;: TekSystems and EDS&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Oct. 2005 - Sep 2008&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location(s)&lt;/em&gt;: Warren, MI. Detroit, MI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title(s)&lt;/em&gt;: Software Developer, Business Analyst, Associate Systems Engineer, Business Analyst&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Group(s)&lt;/em&gt;: FEA Structures &amp;amp; Durabilities, IS+S Identity Management, North America Operations&lt;/li&gt;
&lt;li&gt;Job Responsibilities:&lt;ul&gt;
&lt;li&gt;Developed Finite Element Analysis software for the Abaqus/CAE platform (Python, C++).&lt;/li&gt;
&lt;li&gt;Developed LotusScript static analysis tools (LotusScript, C++).&lt;/li&gt;
&lt;li&gt;Developed high-throughput network scanners (Python, Win32 COM, WinNT WMI).&lt;/li&gt;
&lt;li&gt;Developed identity and authorization auditing systems (Java/Oracle).&lt;/li&gt;
&lt;li&gt;Developed identity org tree relationship analysis software (Python, Sun/LDAP).&lt;/li&gt;
&lt;li&gt;Administrate IBM Lotus Domino servers and support Lotus developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;baker-college&#34;&gt;
&lt;h2&gt;Baker College&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: Sept. 2002 - May 2005&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Flint, MI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Title&lt;/em&gt;: Tutor - Computer Information Systems&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Group&lt;/em&gt;: Learning Support Services&lt;/li&gt;
&lt;li&gt;Job Responsibilities:&lt;ul&gt;
&lt;li&gt;Tutored college courses to individuals and groups on an appointment basis.&lt;/li&gt;
&lt;li&gt;Specialization in Perl/WEB CGI, C++, Unix Administration and Shell scripting,&lt;/li&gt;
&lt;li&gt;Additional languages tutored: RPG IV, .NET, Python, Java, SQL.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;education&#34;&gt;
&lt;h1&gt;Education&lt;/h1&gt;
&lt;div class=&#34;section&#34; id=&#34;associate-of-applied-science-systems-technology&#34;&gt;
&lt;h2&gt;Associate of Applied Science &amp;amp; Systems Technology&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: 2002 - 2005&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Baker College of Flint, MI&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DID NOT FINISH&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;high-school-equivalency&#34;&gt;
&lt;h2&gt;High School Equivalency&lt;/h2&gt;
&lt;ul class=&#34;simple&#34;&gt;
&lt;li&gt;&lt;em&gt;Duration&lt;/em&gt;: 2001&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Location&lt;/em&gt;: Lansing, MI&lt;/li&gt;
&lt;li&gt;No. 0117992-01&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>